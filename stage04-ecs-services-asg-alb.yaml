AWSTemplateFormatVersion: "2010-09-09"
Description: "The template used to create an ECS Service from the ECS Console."
Parameters:
  ECSClusterName:
    Type: String
    Default: "ECS-Cluster-Test-Hays"
  ECSServiceName:
    Type: String
    Default: "TaskDefName"
  SecurityGroupIDs:
    Type: CommaDelimitedList
    Default: "sg-0303fc6303039dba3"
  SubnetIDs:
    Type: CommaDelimitedList
    Default: "subnet-0d882bfa73dc4fc99,subnet-0a611e1ef66459b4a"
  VpcID:
    Type: String
    Default: "vpc-09d26c7b247cb4094"
  LoadBalancerName:
    Type: String
    Default: "alb-haystest-08081969"
  TaskDefinitionArn:
    Type: String
    Default: "arn:aws:ecs:eu-central-1:038629069022:task-definition/Task1-nginx:6"
    Description: "The ARN of the Task Definition to use for the ECS Service."

Resources:
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSClusterName
      TaskDefinition: !Ref TaskDefinitionArn
      LaunchType: FARGATE
      ServiceName: !Ref ECSServiceName
      SchedulingStrategy: REPLICA
      DesiredCount: 2
      LoadBalancers:
        - ContainerName: nginxexposed
          ContainerPort: 80
          LoadBalancerName: !Ref "AWS::NoValue"
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups: !Ref SecurityGroupIDs
          Subnets: !Ref SubnetIDs
      PlatformVersion: LATEST
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      DeploymentController:
        Type: ECS
      ServiceConnectConfiguration:
        Enabled: false
      Tags: []
      EnableECSManagedTags: true
    DependsOn:
      - Listener

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Name: !Ref LoadBalancerName
      SecurityGroups: !Ref SecurityGroupIDs
      Subnets: !Ref SubnetIDs

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: "/"
      Name: "ecs-ECS-Cl-TaskDefName"
      Port: 80
      Protocol: HTTP
      TargetType: ip
      HealthCheckProtocol: HTTP
      VpcId: !Ref VpcID
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "300"

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  AutoScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: "3"
      MinCapacity: "2"
      ResourceId: "service/ECS-Cluster-Test-Hays/TaskDefName"
      RoleARN: "arn:aws:iam::038629069022:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ScalableDimension: "ecs:service:DesiredCount"
      ServiceNamespace: "ecs"
    DependsOn:
      - ECSService

  AutoScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: "Target tracking 70"
      PolicyType: "TargetTrackingScaling"
      ResourceId: "service/ECS-Cluster-Test-Hays/TaskDefName"
      ScalingTargetId: !Ref AutoScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        ScaleInCooldown: "300"
        ScaleOutCooldown: "300"
        TargetValue: "70"
        PredefinedMetricSpecification:
          PredefinedMetricType: "ECSServiceAverageCPUUtilization"

Outputs:
  ClusterName:
    Description: "The cluster used to create the service."
    Value: !Ref ECSClusterName
  ECSService:
    Description: "The created service."
    Value: !Ref ECSService
  LoadBalancer:
    Description: "The created load balancer."
    Value: !Ref LoadBalancer
  Listener:
    Description: "The created listener."
    Value: !Ref Listener
  TargetGroup:
    Description: "The created target group."
    Value: !Ref TargetGroup
  AutoScalingTarget:
    Value: !Ref AutoScalingTarget
  AutoScalingPolicy:
    Value: !Ref AutoScalingPolicy